name: CI/CD Workflow

on:
  push:
    branches:
      - main 
jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      
    - name: Create .env file
      run: |
        echo "SECRET_KEY=${{ secrets.DJANGO_KEY }}" >> backend/.env
        echo "DEBUG=${{ secrets.DEBUG }}" >> backend/.env
        echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> backend/.env
        echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> backend/.env
        echo "EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> backend/.env
        echo "EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }}" >> backend/.env
        echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> backend/.env
        echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> backend/.env
        
      
    - name: Install docker-compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images with docker-compose
      run: |
        docker-compose build --no-cache
        docker-compose push

    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/ubuntu/portfolio
          git pull origin main
          docker compose down
          docker compose up -d --build
          
      
    - name: Run collectstatic
      run: |
        for i in {1..10}; do
          echo "Attempt $i: trying collectstatic..."
          docker-compose exec -T web python manage.py collectstatic --noinput && break || sleep 5
        done
